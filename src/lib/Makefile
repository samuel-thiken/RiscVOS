#
# lib Makefile
#
# See LICENSE for license details.
# 
# Maintainer : Mathieu Barbe <mathieu.barbe@grenoble-inp.org> - 2018
#
# To view commands use: make V=1
#

SHELL = /bin/sh
LIB_NAME ?= lib
BUILD_DIR ?= ../build
LIB_OBJ_DIR = $(BUILD_DIR)/$(LIB_NAME)
LIB_TARGET ?= $(BUILD_DIR)/$(LIB_NAME).a

#
# Objects and include headers directories
#

LIB_INCLUDES = include include/riscv
LIB_INCLUDES := $(addprefix ../$(LIB_NAME)/, $(LIB_INCLUDES)) # Useful if this Makefile is imported to an other.

LIB_SRC_DIRS = stdin stdlib stdio string drivers hash arch/rv64
LIB_SRC_DIRS := $(addprefix ../$(LIB_NAME)/, $(LIB_SRC_DIRS)) # Useful if this Makefile is imported to an other.
LIB_SRC = $(foreach d, $(LIB_SRC_DIRS), $(wildcard $(d)/*.c))
LIB_OBJS = $(sort $(LIB_SRC:.c=.o))
LIB_OBJS := $(addprefix $(LIB_OBJ_DIR)/, $(LIB_OBJS:../lib/%=%))
LIB_DEPFILES = $(LIB_OBJS:.o=.d)


#
# CFlags
#

# Default optim and debug options
LIB_CFLAGS ?= -O0 -g

# Import common cros-compile properties : tools, CFlags and  LDFlags
include ../riscv_flags.config
include ../toolchain.config

LIB_CFLAGS += $(ARCH_CFLAGS)

# Add specific libc C flags
LIB_CFLAGS += $(addprefix -I, $(LIB_INCLUDES))

#
# Targets
#

# Remove implicit rules 
.SUFFIXES:



$(LIB_TARGET) : $(LIB_OBJS)
	$(call cmd,AR LIB -> $(@:../%=%), $(dir $@), \
	$(AR) cr $@ $(LIB_OBJS))

$(LIB_OBJ_DIR)/%.o: ../$(LIB_NAME)/%.c Makefile ../riscv_flags.config
	$(call cmd,CC LIB $<, $(dir $@), \
	$(CC) -c -o $@ $< -MMD -MP $(LIB_CFLAGS))

# Include object dependencies generated by gcc
-include $(LIB_DEPFILES)

.PHONY: clean_lib
clean_lib:
	rm -f $(LIB_TARGET) 
	rm -rf $(LIB_OBJ_DIR)

#
# To view commands use: make V=1
#

ifdef V
cmd = @mkdir -p $2 ; echo "$1 :\n$3"; $3
else
cmd = @echo "$1"; mkdir -p $2 ; $3
endif

