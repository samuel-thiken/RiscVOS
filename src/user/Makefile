#
# User space Makefile
#
# See LICENSE for license details.
#
# Maintainer : Mathieu Barbe <mathieu.barbe@grenoble-inp.org> - 2018
#
# This Makefile use sub makefiles in build/ to build and link each app and
# the standard library for our custom kernel/userspace environment.
#
# To view commands use: make V=1
#

SHELL = /bin/sh
BUILD_DIR ?= ../build
OUTPUT ?= $(BUILD_DIR)/user
CONFIG_DEPENDENCIES = Makefile ../riscv_flags.config ../toolchain.config build/apps.mk build/apps.lds build/tests.mk

user_space: apps

# todo A sup
# Include makefile utilities
include build/utils.mk

#
# Import standard library build toolchain
#

STDLIB_NAME = lib
include ../$(STDLIB_NAME)/Makefile

#
# Common cflags and ldflags
#

# Import specific architecture  parameters :
include ../riscv_flags.config
include ../toolchain.config

CFLAGS = $(ARCH_CFLAGS) -g -O0
APP_INCLUDES = $(LIB_INCLUDES) $(ULIB_DIR)
LDFLAGS = $(CFLAGS) $(ARCH_LDFLAGS)

#
# User lib configuration
#

ULIB_DIR = ulib
ULIB = $(OUTPUT)/ulib.a
OUTPUT_ULIB = $(OUTPUT)/ulib

# ulib Sources files
ULIB_SRC = $(wildcard $(ULIB_DIR)/*.c)
ULIB_ASM = $(wildcard $(ULIB_DIR)/*.S)
ULIB_OBJS = $(sort $(ULIB_SRC:.c=.o)) $(sort $(ULIB_ASM:.S=.o))
ULIB_OBJS := $(addprefix $(OUTPUT_ULIB)/, $(ULIB_OBJS))
ULIB_DEPFILES = $(ULIB_OBJS:.o=.d)

ULIB_CFLAGS = $(CFLAGS) $(addprefix -I, $(APP_INCLUDES))

#
# Apps
#
APPS_NAMES = hello

APP_CFLAGS = $(CFLAGS) $(addprefix -I, $(APP_INCLUDES))

APP_LDFLAGS := $(LDFLAGS) -T build/apps.lds

# Configure and import userspace program build toolchain
APPS_STD_LIB = $(BUILD_DIR)/$(STDLIB_NAME).a $(ULIB)
APPS_STD_TARGET := $(LIB_TARGET) $(ULIB)
include build/apps.mk

#
# Tests apps
#

TESTS_DIR     := tests
TESTS_OPTIONS := WITH_MSG USER_SPACE
include build/tests.mk

#
# Targets
#

# Remove every implicite rules
.suffixe:

list_apps:
	@ echo $(APPS_NAMES)

apps: $(APPS_TARGETS) $(TESTS_TARGETS)

ulib: $(ULIB)
$(ULIB): $(ULIB_OBJS)
	$(call cmd,AR ULIB -> $(@:../%=%), $(dir $@), \
	$(AR) cr $@ $^)

$(OUTPUT_ULIB)/%.o: %.S $(CONFIG_DEPENDENCIES)
	$(call cmd,AS ULIB $<, $(dir $@), \
	$(CC) -c $< -o $@ $(ULIB_CFLAGS) -MMD -MP)

$(OUTPUT_ULIB)/%.o: %.c $(CONFIG_DEPENDENCIES)
	$(call cmd,CC ULIB $<, $(dir $@), \
	$(AS) -c $< -o $@ $(ULIB_CFLAGS) -MMD -MP)

### Standard output directory ###
$(OUTPUT):
	mkdir -p $@

# Include object dependencies generated by gcc
-include $(ULIB_DEPFILES)

.PHONY: clean
clean:
	rm -rf $(OUTPUT)

#
# To view commands use: make V=1
#

ifdef V
cmd = @mkdir -p $2 ; echo "$1 :\n$3"; $3
else
cmd = @echo "$1"; mkdir -p $2 ; $3
endif

